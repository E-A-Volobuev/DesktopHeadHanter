<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>